// <auto-generated />
using CeibaEstacionamientoGjmg.AccesoADatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CeibaEstacionamientoGjmg.Migrations
{
    [DbContext(typeof(DbEstacionamientoContext))]
    partial class DbEstacionamientoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CeibaEstacionamientoGjmg.Models.Comprobante", b =>
                {
                    b.Property<int>("IdComprobante")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("EstadoComprobante");

                    b.Property<DateTime>("FechaIngeso");

                    b.Property<DateTime>("FechaSalida");

                    b.Property<int>("IdVehiculo");

                    b.Property<int>("TotalHoras");

                    b.Property<int>("ValorTotal");

                    b.HasKey("IdComprobante");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("Comprobante");
                });

            modelBuilder.Entity("CeibaEstacionamientoGjmg.Models.TipoVehiculo", b =>
                {
                    b.Property<int>("IdTipoVehiculo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NombreTipo")
                        .IsRequired();

                    b.HasKey("IdTipoVehiculo");

                    b.ToTable("TipoVehiculo");
                });

            modelBuilder.Entity("CeibaEstacionamientoGjmg.Models.Vehiculo", b =>
                {
                    b.Property<int>("IdVehiculo")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cilindraje");

                    b.Property<int>("IdTipoVehiculo");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7);

                    b.HasKey("IdVehiculo");

                    b.HasIndex("IdTipoVehiculo");

                    b.ToTable("Vehiculo");
                });

            modelBuilder.Entity("CeibaEstacionamientoGjmg.Models.Comprobante", b =>
                {
                    b.HasOne("CeibaEstacionamientoGjmg.Models.Vehiculo", "Vehiculo")
                        .WithMany("comprobante")
                        .HasForeignKey("IdVehiculo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CeibaEstacionamientoGjmg.Models.Vehiculo", b =>
                {
                    b.HasOne("CeibaEstacionamientoGjmg.Models.TipoVehiculo", "TipoVehiculo")
                        .WithMany("vehiculo")
                        .HasForeignKey("IdTipoVehiculo")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
